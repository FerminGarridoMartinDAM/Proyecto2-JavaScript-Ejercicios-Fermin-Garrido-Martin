/* Ejercicio 9
Calcular una suma puede ser tan simple como iterar sobre un array y sumar cada uno de los elementos.

Completa la funci√≥n denominada sumNumbers que toma un array de n√∫meros como argumento y devuelve la suma de todos los n√∫meros del array.

Puedes usar este array para probar tu funci√≥n: */

/* const numbers = [1, 2, 3, 5, 45, 37, 58]; */




/* se define una funci√≥n llamada sumNumbers que recibe un par√°metro: numberList.
Puedes pasarle cualquier array de n√∫meros cuando la llames.
 */
/* Empieza un bucle for...of, que recorre cada n√∫mero del array.
 let sumaTotal = 0 ; Aqu√≠ creas una variable para ir acumulando la suma. Comienza en 0.
En cada vuelta, numero ser√° uno de los valores (por ejemplo: 1, luego 2, luego 3...). */
/* sumaTotal = sumaTotal + numero; Aqu√≠ haces la suma: actualizas sumaTotal con el n√∫mero actual. */
/* Total; Despu√©s de recorrer todos los n√∫meros, devuelves el total. */

/* const resultado = sumNumbers(numbers);
console.log("‚úÖ Suma total:", resultado);
Ver√°s en la consola todos los pasos + el resultado final. */

const numbers = [1, 2, 3, 5, 45, 37, 58];

function sumNumbers(numberList) {
  let sumaTotal = 0;
  for (const numero of numberList) {
    console.log("üî¢ N√∫mero actual:", numero);
    console.log("üìä Suma anterior:", sumaTotal);
    sumaTotal = sumaTotal + numero;
    console.log("‚ûï Nueva suma:", sumaTotal);
    console.log("--------------------------");
  }

  return sumaTotal;
}


const resultado = sumNumbers(numbers);
console.log("‚úÖ Suma total:", resultado);